spring:
  data:
    mongodb:
      # Render sáº½ provide MongoDB URI qua environment variable
      uri: ${MONGODB_URI:mongodb://localhost:27017/marketplace}
      database: marketplace

  # Email configuration
  mail:
    host: ${EMAIL_HOST:smtp.gmail.com}
    port: ${EMAIL_PORT:587}
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            trust: "*"
    test-connection: false

  # File upload
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
      enabled: true

  # Thymeleaf caching
  thymeleaf:
    cache: true
    prefix: classpath:/templates/
    suffix: .html

# Server configuration for Render
server:
  port: ${PORT:8080}
  # Render auto-assigns port, so we use PORT env var

  # Enable compression for better performance
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Application settings
app:
  name: ${APP_NAME:Cosmic Marketplace}
  url: ${APP_URL:https://marketplace-backend.onrender.com}
  support:
    email: ${SUPPORT_EMAIL:support@cosmicmarketplace.com}

# JWT Security
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}

# Stripe configuration
stripe:
  api-key: ${STRIPE_SECRET_KEY}
  publishable-key: ${STRIPE_PUBLISHABLE_KEY}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET}

# CORS - Allow Render frontend URL + local development
cors:
  allowed-origins: ${CORS_ORIGINS:https://marketplace-frontend.onrender.com,http://localhost:5173,http://localhost:3000}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
  allowed-headers: "*"
  allow-credentials: true

# File storage (Render has ephemeral filesystem)
file:
  upload:
    dir: ${UPLOAD_DIR:/tmp/uploads/}
    max-size: 10485760
    allowed-types: image/jpeg,image/jpg,image/png,image/gif,image/webp

# Logging for production
logging:
  level:
    com.marketplace: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.springframework.mail: INFO
    root: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Actuator for health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized