// Test file ƒë·ªÉ ki·ªÉm tra consistency c·ªßa order status labels
import { getStatusLabel, ORDER_STATUS } from './constants.js'

// Test function ƒë·ªÉ ki·ªÉm tra t·∫•t c·∫£ status labels
export const testOrderStatusConsistency = () => {
  console.log('üß™ Testing Order Status Consistency...')

  const testCases = [
    { status: ORDER_STATUS.PENDING, expected: 'Ch·ªù x·ª≠ l√Ω' },
    { status: ORDER_STATUS.PROCESSING, expected: 'ƒêang x·ª≠ l√Ω' },
    { status: ORDER_STATUS.SHIPPED, expected: 'ƒêang giao' }, // Admin/Customer
    { status: ORDER_STATUS.DELIVERED, expected: 'ƒê√£ giao' },
    { status: ORDER_STATUS.CANCELLED, expected: 'ƒê√£ h·ªßy' },
  ]

  console.log('\nüìä Status Labels by Role:')
  console.log('='.repeat(50))

  const roles = ['ADMIN', 'SELLER', 'CUSTOMER']

  roles.forEach((role) => {
    console.log(`\nüë§ ${role}:`)
    testCases.forEach((testCase) => {
      const actual = getStatusLabel(testCase.status, role)
      const isCorrect =
        actual === testCase.expected ||
        (role === 'SELLER' &&
          testCase.status === ORDER_STATUS.SHIPPED &&
          actual === 'ƒê√£ g·ª≠i h√†ng') ||
        (role === 'SELLER' &&
          testCase.status === ORDER_STATUS.DELIVERED &&
          actual === 'ƒê√£ giao h√†ng')

      console.log(`  ${testCase.status}: "${actual}" ${isCorrect ? '‚úÖ' : '‚ùå'}`)
    })
  })

  console.log('\nüéØ Key Differences:')
  console.log('‚Ä¢ ADMIN/CUSTOMER: SHIPPED = "ƒêang giao" (customer perspective)')
  console.log('‚Ä¢ SELLER: SHIPPED = "ƒê√£ g·ª≠i h√†ng" (seller perspective)')
  console.log('‚Ä¢ SELLER: DELIVERED = "ƒê√£ giao h√†ng" (more descriptive)')

  console.log('\n‚úÖ Test completed!')
}

// Run test if this file is executed directly
if (import.meta.url === `file://${process.cwd()}/src/utils/orderStatusTest.js`) {
  testOrderStatusConsistency()
}
